/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import files.ConfigFile;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Asus
 */
public class gui2 extends javax.swing.JFrame {

    ConfigFile conf;

    /**
     * Creates new form NewJFrame
     */
    public gui2() throws IOException {
        conf = new ConfigFile("config.properties");
        conf.loadConfig();
        initComponents();
        System.out.println("Componentes inicializados.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        RandomFile_JL = new javax.swing.JLabel();
        RandomFile_JTF = new javax.swing.JTextField();
        SchedulerName_JL = new javax.swing.JLabel();
        SchedulerName_JTF = new javax.swing.JTextField();
        SourcePath_JL = new javax.swing.JLabel();
        SourcePath_JTF = new javax.swing.JTextField();
        CommitCycles_JTF = new javax.swing.JTextField();
        CommitCycles_JL = new javax.swing.JLabel();
        DecodeCycles_JTF = new javax.swing.JTextField();
        DecodeCycles_JL = new javax.swing.JLabel();
        ExecuteCycles_JTF = new javax.swing.JTextField();
        ExecuteCycles_JL = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RandomFile_JL.setText("RandomFile");

        RandomFile_JTF.setText(ConfigFile.getRandomFile());
        RandomFile_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomFile_JTFActionPerformed(evt);
            }
        });

        SchedulerName_JL.setText("SchedulerName");

        SchedulerName_JTF.setText(ConfigFile.getSchedulerName());
        SchedulerName_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchedulerName_JTFActionPerformed(evt);
            }
        });

        SourcePath_JL.setText("SourcePath");

        SourcePath_JTF.setText(ConfigFile.getSourcePath());
        SourcePath_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SourcePath_JTFActionPerformed(evt);
            }
        });

        CommitCycles_JTF.setText(ConfigFile.getCommitCycles()+"");
        CommitCycles_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommitCycles_JTFActionPerformed(evt);
            }
        });

        CommitCycles_JL.setText("CommitCycles");

        DecodeCycles_JTF.setText(ConfigFile.getDecodeCycles()+"");
        DecodeCycles_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecodeCycles_JTFActionPerformed(evt);
            }
        });

        DecodeCycles_JL.setText("DecodeCycles");

        ExecuteCycles_JTF.setText(ConfigFile.getExecuteCycles()+"");
        ExecuteCycles_JTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteCycles_JTFActionPerformed(evt);
            }
        });

        ExecuteCycles_JL.setText("ExecuteCycles");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(RandomFile_JL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(RandomFile_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(SchedulerName_JL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(SchedulerName_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SourcePath_JL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SourcePath_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(DecodeCycles_JL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(DecodeCycles_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CommitCycles_JL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CommitCycles_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ExecuteCycles_JL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ExecuteCycles_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(262, 262, 262))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RandomFile_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RandomFile_JTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SchedulerName_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SchedulerName_JTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SourcePath_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SourcePath_JTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CommitCycles_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CommitCycles_JTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DecodeCycles_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DecodeCycles_JTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExecuteCycles_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExecuteCycles_JTF))
                .addGap(147, 147, 147))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RandomFile_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomFile_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RandomFile_JTFActionPerformed

    private void SchedulerName_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchedulerName_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SchedulerName_JTFActionPerformed

    private void SourcePath_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SourcePath_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SourcePath_JTFActionPerformed

    private void CommitCycles_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommitCycles_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CommitCycles_JTFActionPerformed

    private void DecodeCycles_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecodeCycles_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DecodeCycles_JTFActionPerformed

    private void ExecuteCycles_JTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteCycles_JTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExecuteCycles_JTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("System".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new gui2().setVisible(true);
                    System.out.println("Enseñando ventana");
                } catch (IOException ex) {
                    Logger.getLogger(gui2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CommitCycles_JL;
    private javax.swing.JTextField CommitCycles_JTF;
    private javax.swing.JLabel DecodeCycles_JL;
    private javax.swing.JTextField DecodeCycles_JTF;
    private javax.swing.JLabel ExecuteCycles_JL;
    private javax.swing.JTextField ExecuteCycles_JTF;
    private javax.swing.JLabel RandomFile_JL;
    private javax.swing.JTextField RandomFile_JTF;
    private javax.swing.JLabel SchedulerName_JL;
    private javax.swing.JTextField SchedulerName_JTF;
    private javax.swing.JLabel SourcePath_JL;
    private javax.swing.JTextField SourcePath_JTF;
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables
}
